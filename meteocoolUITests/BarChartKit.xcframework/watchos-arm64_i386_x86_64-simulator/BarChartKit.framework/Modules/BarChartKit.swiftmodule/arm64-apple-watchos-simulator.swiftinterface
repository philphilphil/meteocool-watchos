// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.3 (swiftlang-1200.0.29.2 clang-1200.0.30.1)
// swift-module-flags: -target arm64-apple-watchos6.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BarChartKit
import Foundation
import Swift
import SwiftUI
public struct BarChart : SwiftUI.View {
  public struct DataSet {
    public struct DataElement {
      public struct Bar {
        public let value: Swift.Double
        public let color: SwiftUI.Color
        public init(value: Swift.Double, color: SwiftUI.Color)
      }
      public let date: Foundation.Date?
      public let xLabel: Swift.String
      public let bars: [BarChartKit.BarChart.DataSet.DataElement.Bar]
      public init(date: Foundation.Date?, xLabel: Swift.String, bars: [BarChartKit.BarChart.DataSet.DataElement.Bar])
    }
    public let elements: [BarChartKit.BarChart.DataSet.DataElement]
    public let selectionColor: SwiftUI.Color?
    public init(elements: [BarChartKit.BarChart.DataSet.DataElement], selectionColor: SwiftUI.Color?)
  }
  public let dataSet: BarChartKit.BarChart.DataSet
  @SwiftUI.Binding @_projectedValueProperty($selectedElement) public var selectedElement: BarChartKit.BarChart.DataSet.DataElement? {
    get
    nonmutating set
    nonmutating _modify
  }
  public var $selectedElement: SwiftUI.Binding<BarChartKit.BarChart.DataSet.DataElement?> {
    get
  }
  public let barWidth: CoreGraphics.CGFloat
  public var body: some SwiftUI.View {
    get
  }
  public init(dataSet: BarChartKit.BarChart.DataSet, selectedElement: SwiftUI.Binding<BarChartKit.BarChart.DataSet.DataElement?>, barWidth: CoreGraphics.CGFloat = 6)
  public typealias Body = @_opaqueReturnTypeOf("$s11BarChartKit0aB0V4bodyQrvp", 0) ðŸ¦¸
}
extension BarChart.DataSet.DataElement : Swift.Identifiable {
  public var id: Swift.String {
    get
  }
  public typealias ID = Swift.String
}
extension BarChart.DataSet.DataElement : Swift.Equatable {
  public static func == (lhs: BarChartKit.BarChart.DataSet.DataElement, rhs: BarChartKit.BarChart.DataSet.DataElement) -> Swift.Bool
}
extension BarChart.DataSet.DataElement.Bar : Swift.Identifiable {
  public var id: Swift.String {
    get
  }
  public typealias ID = Swift.String
}
extension BarChart.DataSet.DataElement.Bar : Swift.Equatable {
  public static func == (lhs: BarChartKit.BarChart.DataSet.DataElement.Bar, rhs: BarChartKit.BarChart.DataSet.DataElement.Bar) -> Swift.Bool
}
